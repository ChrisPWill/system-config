#!/usr/bin/env nu
# vim: ft=nu

def branches [] {
  git for-each-ref --sort=-committerdate refs/heads/ --format="%(refname:short)\t%(committerdate:iso8601)" |
    lines |
    split column "\t" branch date |
    sort-by date |
    reverse
}

def "main" [
  --noLimit
  --limit: int = 5
] {
    if $noLimit {
      branches
    } else {
      branches |
        take $limit
    }
}

def "newbranch" [] {
  print '(s) Standard branch format (f) Free form'
  loop {
    let key = (input listen --types [key])
    if ($key.code == 's') {
      let taskName = input "Enter task name (e.g., ISSUE-123): "
      let context = input "Enter context e.g. 'Fixing a bug': "
      let contextWithDashesInsteadOfSpaces = $context | str replace --all ' ' '-'
      git checkout -b ("cwilliams/" + $taskName + "-" + $contextWithDashesInsteadOfSpaces)
      break
    } else if ($key.code == 'f') {
      let branchName = input "Enter branch name (e.g., feature/issue-123): "
      if ($branchName | is-not-empty) {
        git checkout -b $branchName
        break
      } else {
        echo "No branch name provided, exiting."
        return
      }
    } else {
      echo "Invalid input. Please enter 's' for standard or 'f' for free form."
    }
  }
}

def "main switch" [] {
  let selected = branches |
    get branch |
    insert 0 "New Branch" |
    input list --fuzzy "Pick a branch"

  if $selected == "New Branch" {
    newbranch
  } else {
    # Switch to the selected branch
    git checkout $selected
  }
}
